name: Android CI

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'app/**'
  push:
    paths:
      - 'app/**'

jobs:
  build-apk:
    name: Build APK
    runs-on: ubuntu-22.04
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_NDK_HOME: ${{ github.workspace }}/android-sdk/ndk/23.2.8568313
      ARCH: linux-x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK and NDK
        run: |
          sudo apt update
          curl -fo sdk-tools-linux.zip https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          mkdir -p $ANDROID_HOME/cmdline-tools
          unzip sdk-tools-linux.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          
          yes | sdkmanager --licenses
          sdkmanager --install "platform-tools" "platforms;android-30" "ndk;23.2.8568313" "build-tools;30.0.3"

      - name: Get dependencies
        working-directory: ${{ github.workspace }}/app/jni
        run: |
          chmod +x get_deps.sh
          ./get_deps.sh  

      - name: Restore cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: app/jni/build-*
          key: jni-build-${{ hashFiles('app/jni/Makefile') }}

      - name: Build libraries (ARMv7 32-bit)
        if: steps.cache-restore.outputs.cache-hit != 'true'
        working-directory: ${{ github.workspace }}/app/jni
        run: |
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          HOST=armv7a-linux-androideabi TARGET=arm-linux-androideabi ABI=armeabi-v7a make
          make clean

      - name: Build libraries (ARMv8 64-bit)
        if: steps.cache-restore.outputs.cache-hit != 'true'
        working-directory: ${{ github.workspace }}/app/jni
        run: |
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          HOST=aarch64-linux-android TARGET=aarch64-linux-android ABI=arm64-v8a make
          make clean

      - name: Save cache
        id: cache-save
        if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: app/jni/build-*
          key: jni-build-${{ hashFiles('app/jni/Makefile') }}

      - name: Prepare mkxp-z files
        working-directory: ${{ github.workspace }}/app/jni/mkxp-z
        run: |
          chmod +x make_xxd.sh
          ./make_xxd.sh

      - name: Build APK
        working-directory: ${{ github.workspace }}
        run: ./gradlew assembleDebug

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apk-debug
          path: app/build/outputs/apk/debug/*.apk
